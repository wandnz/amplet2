# amplet2-client default client configuration file
#
# See: https://github.com/wanduow/amplet2/wiki/Configuring-the-Amplet2-Client
#
# You MUST configure collector:address to the server where you want to report,
# otherwise your data will not be reported.
#
# You SHOULD configure ampname to the name of this monitor so that it can be
# easily identified from other monitors reporting to the same collector.


# The ampname is reported as the source of the tests. It should generally be
# unique (unless you have a really good reason not to). If it is not set then
# it defaults to the hostname of the machine.
#ampname = unknown

# Log level to control the number of messages logged. The given level is the
# minimum severity required to generate a log message. The default value is
# info, possible values are:
#   debug, info, notice, warn, err, crit, alert, emerg
#loglevel = info

# Source interface that all tests should bind to when sending test data. If
# not set then any interface on the machine may be used (depending on the
# routing table).
#interface = eth0

# Source IPv4 address that all tests should bind to when sending test data. If
# not set then any address on the machine may be used (depending on interface
# selection). If set, only this IPv4 address will be used unless IPv6 is also
# explicitly enabled. The value "any" may be used to explicitly enable this
# address family but not force a specific address.
#ipv4 = 192.0.2.1

# Source IPv6 address that all tests should bind to when sending test data. If
# not set then any address on the machine may be used (depending on interface
# selection). If set, only this IPv6 address will be used unless IPv4 is also
# explicitly enabled. The value "any" may be used to explicitly enable this
# address family but not force a specific address.
#ipv6 = 2001:DB8::1

# Minimum gap (in microseconds) between sending probe packets for most tests.
# By default this is set to 100us which may be too short for some connections
# with slower upload speeds. We are currently using 1000us for ADSL.
#packetdelay = 100

# Override the default nameservers in /etc/resolv.conf and use these ones
# instead. If you specify more than 3, only the first 3 valid addresses
# will be used.
#nameservers = { 192.0.2.100, 192.0.2.101, 192.0.2.102 }

# Wait for system clock to be synchronised via NTP before starting scheduler.
#waitforclocksync = false

# SSL settings used for reporting to the collector or communicating with other
# amplet clients to start remote test servers (e.g. throughput).
# cacert, cert and key don't need to be set (they will be automagically set)
# but the files are always required even if not doing SSL to the rabbitmq
# server. Run an amppki server on the collector to have it act as a certificate
# authority and sign client certificates when the client first runs, unless you
# want to use your own CA and distribute certificates yourself. Default values
# for the SSL certificates and key are based on the ampname and collector name:
#     cacert = /etc/amplet2/keys/<collector>.pem
#     cert   = /etc/amplet2/keys/<ampname>/<collector>.cert
#     key    = /etc/amplet2/keys/<ampname>/key.pem
ssl {
    waitforcert = true
#    cacert = /etc/amplet2/keys/cacert.pem
#    cert = /etc/amplet2/keys/cert.pem
#    key = /etc/amplet2/keys/key.pem
#    pkiserver = amp.example.com
}

# Collector to which data should be reported. If there is a rabbitmq broker
# installed on the local machine then by default the amplet client will try
# to use it. If there isn't a local rabbitmq broker then it will try to report
# directly to the remote collector (diskless/lightweight clients might want
# to do this, giving up some reliability to save local resources). This
# behaviour can be overridden by setting the "vialocal" option - true will
# force use of a local collector, false will force reporting directly. SSL
# will be used by default unless the collector is running on port 5672, or it
# is set manually with the "ssl" option.
collector {
#   vialocal = true
    address = amp.example.com
    vhost = /
    exchange = amp_exchange
    routingkey = amp
    port = 5671
#   ssl = true
}

# The control interface is used by other amplets to request test servers be
# started (i.e. throughput, udpstream), or to remotely run tests from a client.
# Anyone connecting to this port has to provide a valid SSL certificate and
# have an appropriate "allow" rule for the command they send. All rules default
# to deny all, with more specific rules overriding less specific rules. You can
# specify names in an "allow" or "deny" rule that will be matched to the common
# name in the certificate of any connecting client (e.g. foo.amp.example.com),
# or specify partial names by prepending the name with a dot
# (e.g. .amp.example.com will match any name ending in .amp.example.com).
control {
    enabled = true
#    ipv4 = 1.2.3.4
#    ipv6 = 2001:DB8::1
#    interface = eth0
#    port = 8869
    acl server {
        allow = all
        deny = {}
    }
#    acl test {
#        allow = { .amp.example.com }
#        deny = { foo.amp.example.com }
#    }
}

# Schedule fetching allows the schedule file to be kept up to date with a
# remote source, without the need to use systems like puppet etc. If you use
# https then the server will be verified (using the built in CA bundle, or
# the specified cacert). If you specify client certs then they will be sent to
# the server for possible verification too. Setting identify to true will
# append the ampname of this client to the URL.
remotesched {
    fetch = false
#    url = https://amp.example.com/schedule
#    identify = true
#    frequency = 3600
#    cacert = /etc/amplet2/keys/cacert.pem
#    cert = /etc/amplet2/keys/cert.pem
#    key = /etc/amplet2/keys/key.pem
}

# The username that the client should run as after dropping root privileges.
#user = amplet

# Set any default arguments that should be applied to test servers. You can
# have multiple "defaults" blocks, one per test type. Ignored for tests that
# don't start their own server.
#defaults <testname> {
#    server = "--foo --bar baz"
#}

# Include another configuration file in this one.
#include(/path/to/file)
